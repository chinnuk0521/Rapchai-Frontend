services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rapchai-postgres
    environment:
      POSTGRES_DB: rapchai_db
      POSTGRES_USER: rapchai_user
      POSTGRES_PASSWORD: rapchai_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - rapchai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rapchai_user -d rapchai_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: rapchai-redis
    command: redis-server --appendonly yes --requirepass rapchai_redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rapchai-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    container_name: rapchai-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - rapchai-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Rapchai Backend API
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: rapchai-api
    environment:
      NODE_ENV: development
      PORT: 3001
      HOST: 0.0.0.0
      DATABASE_URL: "postgresql://rapchai_user:rapchai_password@postgres:5432/rapchai_db?schema=public"
      REDIS_URL: "redis://:rapchai_redis_password@redis:6379"
      REDIS_PASSWORD: "rapchai_redis_password"
      JWT_SECRET: "your-super-secret-jwt-key-change-this-in-production"
      JWT_REFRESH_SECRET: "your-super-secret-refresh-key-change-this-in-production"
      JWT_EXPIRES_IN: "15m"
      JWT_REFRESH_EXPIRES_IN: "7d"
      MINIO_ENDPOINT: "minio"
      MINIO_PORT: 9000
      MINIO_USE_SSL: "false"
      MINIO_ACCESS_KEY: "minioadmin"
      MINIO_SECRET_KEY: "minioadmin123"
      MINIO_BUCKET_NAME: "rapchai-uploads"
      LOG_LEVEL: "info"
      LOG_PRETTY_PRINT: "true"
    ports:
      - "3001:3001"
    volumes:
      - ../src:/app/src
      - ../prisma:/app/prisma
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    networks:
      - rapchai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO Client (for bucket creation)
  minio-client:
    image: minio/mc:latest
    container_name: rapchai-minio-client
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/rapchai-uploads --ignore-existing;
      /usr/bin/mc policy set public myminio/rapchai-uploads;
      exit 0;
      "
    networks:
      - rapchai-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  minio_data:
    driver: local

networks:
  rapchai-network:
    driver: bridge
